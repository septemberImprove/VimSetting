" Modeline and Notes {
" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
"
"                    __ _ _____              _
"         ___ _ __  / _/ |___ /      __   __(_)_ __ ___
"        / __| '_ \| |_| | |_ \ _____\ \ / /| | '_ ` _ \
"        \__ \ |_) |  _| |___) |_____|\ V / | | | | | | |
"        |___/ .__/|_| |_|____/        \_/  |_|_| |_| |_|
"            |_|
"
"   This is the personal .vimrc.bundles file of Steve Francia.
"   While much of it is beneficial for general use, I would
"   recommend picking out the parts you want and understand.
"
"   This file imports the various plugins of spf13. If you
"   wish to alter which groups are imported, see vimrc.before.
"   If you wish to add or remove individual bundles, create
"   ~/.vimrc.bundles.local and `Bundle` or `UnBundle` as needed
"   from there.
"
"   You can find me at http://spf13.com
" }

" Environment {

    " Basics {
        set nocompatible        " Must be first line
        set background=dark     " Assume a dark background
    " }

    " Windows Compatible {
        " On Windows, also use '.vim' instead of 'vimfiles'; this makes synchronization
        " across (heterogeneous) systems easier.
        if has('win32') || has('win64')
          set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after

          " Be nice and check for multi_byte even if the config requires
          " multi_byte support most of the time
          if has("multi_byte")
            " Windows cmd.exe still uses cp850. If Windows ever moved to
            " Powershell as the primary terminal, this would be utf-8
            set termencoding=cp850
            " Let Vim use utf-8 internally, because many scripts require this
            set encoding=utf-8
            setglobal fileencoding=utf-8
            " Windows has traditionally used cp1252, so it's probably wise to
            " fallback into cp1252 instead of eg. iso-8859-15.
            " Newer Windows files might contain utf-8 or utf-16 LE so we might
            " want to try them first.
            set fileencodings=ucs-bom,utf-8,utf-16le,cp1252,iso-8859-15
          endif
        endif
    " }

    " Setup Bundle Support {
        " The next three lines ensure that the ~/.vim/bundle/ system works
        filetype off
        set rtp+=~/.vim/bundle/vundle
        call vundle#rc()
    " }

    " Add an UnBundle command {
    function! UnBundle(arg, ...)
      let bundle = vundle#config#init_bundle(a:arg, a:000)
      call filter(g:vundle#bundles, 'v:val["name_spec"] != "' . a:arg . '"')
    endfunction

    com! -nargs=+         UnBundle
    \ call UnBundle(<args>)
    " }

" }

" Bundles {

    " Deps {
        Bundle 'gmarik/vundle'
        Bundle 'MarcWeber/vim-addon-mw-utils'
        Bundle 'tomtom/tlib_vim'
        if executable('ag')
            Bundle 'mileszs/ack.vim'
            let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
        elseif executable('ack-grep')
            let g:ackprg="ack-grep -H --nocolor --nogroup --column"
            Bundle 'mileszs/ack.vim'
        elseif executable('ack')
            Bundle 'mileszs/ack.vim'
        endif
    " }

    " [CHRIS]在此可以选择需要安装的插件
    " list only the plugin groups you will use
    " 'writing', 'python', 'javascript', 'C', youcompleteme, neocomplcache
    if !exists('g:spf13_bundle_groups')
        let g:spf13_bundle_groups=['general', 'neocomplete', 'programming', 'php', 'html', 'C']
    endif

    " To override all the included bundles, add the following to your
    " .vimrc.bundles.local file:
    "   let g:override_spf13_bundles = 1
    if !exists("g:override_spf13_bundles")

    " General {
        if count(g:spf13_bundle_groups, 'general')
            " 树状目录
            Bundle 'scrooloose/nerdtree'
            " 配色
            Bundle 'altercation/vim-colors-solarized'
            Bundle 'spf13/vim-colors'
            "Bundle 'tpope/vim-surround'
            "Bundle 'tpope/vim-repeat'
            "Bundle 'rhysd/conflict-marker.vim'
            " 括号自动补齐
            Bundle 'jiangmiao/auto-pairs'
            " 在项目中查找文件
            Bundle 'ctrlpvim/ctrlp.vim'
            " 自动跳转函数 查找函数
            Bundle 'tacahiroy/ctrlp-funky'
            " 多重选择单词->可以修改
            Bundle 'terryma/vim-multiple-cursors'
            " 可以用来保存文件上次退出的状态
            "Bundle 'vim-scripts/sessionman.vim'
            " 可以自定义匹配搜索 BEGIN->END
            Bundle 'matchit.zip'
            if (has("python") || has("python3")) && exists('g:spf13_use_powerline') && !exists('g:spf13_use_old_powerline')
                Bundle 'Lokaltog/powerline', {'rtp':'/powerline/bindings/vim'}
            elseif exists('g:spf13_use_powerline') && exists('g:spf13_use_old_powerline')
                Bundle 'Lokaltog/vim-powerline'
            else
                " 小巧美观的状态栏
                Bundle 'vim-airline/vim-airline'
                Bundle 'vim-airline/vim-airline-themes'
            endif
            " 字体
            "Bundle 'powerline/fonts'
            " 提示输出的 有图片在自己路径下
            "Bundle 'bling/vim-bufferline'
            " 提供了一组对应默认移动的键绑定 搜索高亮
            "Bundle 'easymotion/vim-easymotion'
            Bundle 'jistr/vim-nerdtree-tabs'
            " 色彩主题
            "Bundle 'flazz/vim-colorschemes'
            " 保持文件的修改状态 退出后还可以撤销到以前
            Bundle 'mbbill/undotree'
            " 缩进显示
            Bundle 'nathanaelkane/vim-indent-guides'
            if !exists('g:spf13_no_views')
                "Bundle 'vim-scripts/restore_view.vim'
            endif
            " 在左边行显示与Git仓库不同
            Bundle 'mhinz/vim-signify'
            " work with several variants of a word at once
            "Bundle 'tpope/vim-abolish.git'

            "Bundle 'osyo-manga/vim-over'
            "Bundle 'kana/vim-textobj-user'
            "Bundle 'kana/vim-textobj-indent'
            " 选择代码块中的所有内容
            Bundle 'gcmt/wildfire.vim'
        endif
    " }

    " Snippets & AutoComplete {
        if count(g:spf13_bundle_groups, 'snipmate')
            Bundle 'garbas/vim-snipmate'
            " 定制自己的代码片段 as:mainn
            " 需要多看看 .vim/bundle/vim-snippets/snippets
            Bundle 'honza/vim-snippets'
            " Source support_function.vim to support vim-snippets.
            if filereadable(expand("~/.vim/bundle/vim-snippets/snippets/support_functions.vim"))
                source ~/.vim/bundle/vim-snippets/snippets/support_functions.vim
            endif
        elseif count(g:spf13_bundle_groups, 'youcompleteme')
            Bundle 'Valloric/YouCompleteMe'
            Bundle 'SirVer/ultisnips'
            Bundle 'honza/vim-snippets'
        elseif count(g:spf13_bundle_groups, 'neocomplcache')
            Bundle 'Shougo/neocomplcache'
            Bundle 'Shougo/neosnippet'
            Bundle 'Shougo/neosnippet-snippets'
            Bundle 'honza/vim-snippets'
        elseif count(g:spf13_bundle_groups, 'neocomplete')
            Bundle 'Shougo/neocomplete.vim.git'
            Bundle 'Shougo/neosnippet'
            Bundle 'Shougo/neosnippet-snippets'
            Bundle 'honza/vim-snippets'
        endif
    " }

    " General Programming {
        if count(g:spf13_bundle_groups, 'programming')
            " Pick one of the checksyntax, jslint, or syntastic
            " 静态语法检查
            Bundle 'scrooloose/syntastic'
            " Git 集成 下面三个
            Bundle 'tpope/vim-fugitive'
            Bundle 'mattn/webapi-vim'
            "[TODO] 可以在GitHub上记录代码片段  有空需要学习
            Bundle 'mattn/gist-vim'
            " 注释操作 -> 看Doc
            Bundle 'scrooloose/nerdcommenter'
            Bundle 'tpope/vim-commentary'
            " 格式化工具
            Bundle 'godlygeek/tabular'
            " 彩虹括号增强版 不同层次的括号不同颜色
            Bundle 'luochen1990/rainbow'
        endif
    " }

    " C {
        " 显示函数 变量列表 适用于PHP 和 C
        if executable('ctags')
            Bundle 'majutsushi/tagbar'
        endif

        if count(g:spf13_bundle_groups, 'C')
            " C C++ 头文件 C文件一键切换
            Bundle 'a.vim'
        endif
    " }

    " PHP {
        if count(g:spf13_bundle_groups, 'php')
            " 集成PHP特性
            Bundle 'spf13/PIV'
            " PHP 命名
            Bundle 'arnaud-lb/vim-php-namespace'
            " PHP 模板
            Bundle 'beyondwords/vim-twig'
        endif
    " }

    " HTML {
        if count(g:spf13_bundle_groups, 'html')
            " 自动关闭Html 标签  输入>
            Bundle 'amirh/HTML-AutoCloseTag'
            Bundle 'hail2u/vim-css3-syntax'
            Bundle 'gorodinskiy/vim-coloresque'
            Bundle 'tpope/vim-haml'
            "Bundle 'mattn/emmet-vim'
        endif
    " }

    " Javascript {
    " 写的时候再研究
        if count(g:spf13_bundle_groups, 'javascript')
            Bundle 'elzr/vim-json'
            Bundle 'groenewege/vim-less'
            Bundle 'pangloss/vim-javascript'
            Bundle 'briancollins/vim-jst'
            Bundle 'kchmck/vim-coffee-script'
        endif
    " }

    " Writing {
        if count(g:spf13_bundle_groups, 'writing')
            Bundle 'reedes/vim-litecorrect'
            Bundle 'reedes/vim-textobj-sentence'
            Bundle 'reedes/vim-textobj-quote'
            Bundle 'reedes/vim-wordy'
        endif
    " }

    " Python {
        if count(g:spf13_bundle_groups, 'python')
            " Pick either python-mode or pyflakes & pydoc
            Bundle 'klen/python-mode'
            Bundle 'yssource/python.vim'
            Bundle 'python_match.vim'
            Bundle 'pythoncomplete'
        endif
    " }

    " Scala {
        if count(g:spf13_bundle_groups, 'scala')
            Bundle 'derekwyatt/vim-scala'
            Bundle 'derekwyatt/vim-sbt'
            Bundle 'xptemplate'
        endif
    " }

    " Haskell {
        if count(g:spf13_bundle_groups, 'haskell')
            Bundle 'travitch/hasksyn'
            Bundle 'dag/vim2hs'
            Bundle 'Twinside/vim-haskellConceal'
            Bundle 'Twinside/vim-haskellFold'
            Bundle 'lukerandall/haskellmode-vim'
            Bundle 'eagletmt/neco-ghc'
            Bundle 'eagletmt/ghcmod-vim'
            Bundle 'Shougo/vimproc.vim'
            Bundle 'adinapoli/cumino'
            Bundle 'bitc/vim-hdevtools'
        endif
    " }

    " Ruby {
        if count(g:spf13_bundle_groups, 'ruby')
            Bundle 'tpope/vim-rails'
            let g:rubycomplete_buffer_loading = 1
            "let g:rubycomplete_classes_in_global = 1
            "let g:rubycomplete_rails = 1
        endif
    " }

    " Puppet {
        if count(g:spf13_bundle_groups, 'puppet')
            Bundle 'rodjek/vim-puppet'
        endif
    " }

    " Go Lang {
        if count(g:spf13_bundle_groups, 'go')
            "Bundle 'Blackrush/vim-gocode'
            Bundle 'fatih/vim-go'
        endif
    " }

    " Elixir {
        if count(g:spf13_bundle_groups, 'elixir')
            Bundle 'elixir-lang/vim-elixir'
            Bundle 'carlosgaldino/elixir-snippets'
            Bundle 'mattreduce/vim-mix'
        endif
    " }

    " Misc {
        if count(g:spf13_bundle_groups, 'misc')
            Bundle 'rust-lang/rust.vim'
            Bundle 'tpope/vim-markdown'
            Bundle 'spf13/vim-preview'
            Bundle 'tpope/vim-cucumber'
            Bundle 'cespare/vim-toml'
            Bundle 'quentindecock/vim-cucumber-align-pipes'
            Bundle 'saltstack/salt-vim'
        endif
    " }

    endif

" }

"" Use fork bundles config if available {
"    if filereadable(expand("~/.vimrc.bundles.fork"))
"        source ~/.vimrc.bundles.fork
"    endif
"" }
"
"" Use local bundles config if available {
"    if filereadable(expand("~/.vimrc.bundles.local"))
"        source ~/.vimrc.bundles.local
"    endif
"" }
